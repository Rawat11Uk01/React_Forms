{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputISInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredEmailTouched(true);\n    setEnteredNameTouched(true);\n\n    if (!enteredEmailIsValid) {\n      return;\n    }\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    setEnteredName(\"\");\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredNameTouched(false);\n  };\n\n  const emailInputClass = !emailInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        type: \"email\",\n        id: \"Email\",\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"TTDfycCZSJdOVyf9jhl9e4Z55Wc=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputISInvalid","enteredNameIsValid","trim","nameInputISInvalid","formIsValid","emailInputChangeHandler","event","target","value","emailInputBlurHandler","nameInputChangeHandler","nameInputBlurHandler","formSubmissonHandler","preventDefault","console","log","emailInputClass","nameInputClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n \n  const [enteredEmail, setEnteredEmail]= useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false); \n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputISInvalid =  !enteredEmailIsValid && enteredEmailTouched;\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputISInvalid =  !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = (event)=>{\n   setEnteredEmail(event.target.value)\n  }\n   \n  const emailInputBlurHandler = (event)=>{\n    setEnteredEmailTouched(true);\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n    setEnteredEmailTouched(true);\n    setEnteredNameTouched(true);\n    if(!enteredEmailIsValid){\n      return;\n    }\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    setEnteredName(\"\");\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredNameTouched(false);\n  };\n  const emailInputClass = !emailInputISInvalid ?   \"form-control\"\n  : \"form-control invalid\";\n\n  const nameInputClasses = !nameInputISInvalid \n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameInputChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n        />\n        {nameInputISInvalid && <p className=\"error-text\">name is not valid</p>}\n      </div>\n\n      <div className={emailInputClass}>\n        <label htmlFor=\"Email\">Your Email</label>\n        <input\n          onChange={emailInputChangeHandler}\n          type=\"email\"\n          id=\"Email\"\n          value={enteredEmail}\n          onBlur={emailInputBlurHandler}\n        />\n        {emailInputISInvalid && <p className=\"error-text\">email is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}