{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const [enterFirstName, setEnterFirstName] = useState('');\n  const [enterFirstNameTouch, setEnterFirstNameTouch] = useState(false);\n  const [enterLastName, setEnterLastName] = useState('');\n  const [enterLastNameTouch, setEnterLastNameTouch] = useState(false);\n  const enterLastNameIsValid = enterLastName.trim() !== '';\n  const enterLastNameISInvalid = !enterLastNameIsValid && enterLastNameTouch;\n  const enterNameIsValid = enterFirstName.trim() !== '';\n  const enterNameISInvalid = !enterNameIsValid && enterFirstNameTouch;\n\n  const inputChangeHandler = event => {\n    setEnterFirstName(event.target.value);\n  };\n\n  const firstNameBlur = () => {\n    setEnterFirstNameTouch(true);\n  };\n\n  const lastInputChangeHandler = event => {\n    setEnterLastName(event.target.value);\n  };\n\n  const lastNameBlur = () => {\n    setEnterLastNameTouch(true);\n  };\n\n  const formSubmitHandler = event => {\n    setEnterFirstNameTouch(true);\n    event.preventDefault();\n\n    if (!enterNameIsValid) {\n      return;\n    }\n\n    if (!enterLastNameIsValid) {\n      return;\n    }\n\n    console.log(enterLastName);\n    console.log(enterFirstName);\n    setEnterFirstName('');\n    setEnterLastName('');\n    setEnterFirstNameTouch(false);\n    setEnterLastNameTouch(false);\n  };\n\n  const FirstnameInputClasses = enterNameISInvalid ? 'form-control invalid' : 'form-control';\n  const lastnameInputClasses = enterNameISInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: FirstnameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: enterFirstName,\n          type: \"text\",\n          id: \"name\",\n          onChange: inputChangeHandler,\n          onBlur: firstNameBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), enterNameISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"please enter a valid name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastnameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastInputChangeHandler,\n          onBlur: lastNameBlur,\n          value: enterLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), enterNameISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"please enter a valid last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"8kqeBw+dozGEha95MhVCqiDnvVo=\");\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/BasicForm.js"],"names":["useState","BasicForm","props","enterFirstName","setEnterFirstName","enterFirstNameTouch","setEnterFirstNameTouch","enterLastName","setEnterLastName","enterLastNameTouch","setEnterLastNameTouch","enterLastNameIsValid","trim","enterLastNameISInvalid","enterNameIsValid","enterNameISInvalid","inputChangeHandler","event","target","value","firstNameBlur","lastInputChangeHandler","lastNameBlur","formSubmitHandler","preventDefault","console","log","FirstnameInputClasses","lastnameInputClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n\nconst BasicForm = (props) => {\n  const [enterFirstName, setEnterFirstName] = useState('');\n  const [enterFirstNameTouch, setEnterFirstNameTouch ] = useState(false);\n\n  const [enterLastName, setEnterLastName] = useState('');\n  const [enterLastNameTouch, setEnterLastNameTouch ] = useState(false);\n\n  const enterLastNameIsValid = enterLastName.trim() !== '';\n  const enterLastNameISInvalid = !enterLastNameIsValid && enterLastNameTouch;\n   \n  const enterNameIsValid = enterFirstName.trim() !== '';\n  const enterNameISInvalid = !enterNameIsValid && enterFirstNameTouch;\n\n\n  const inputChangeHandler = ((event)=>{\n    setEnterFirstName(event.target.value);\n  })\n  const firstNameBlur = (()=>{\n    setEnterFirstNameTouch(true);\n   \n  })\n\n  const lastInputChangeHandler = ((event)=>{\n    setEnterLastName(event.target.value);\n  })\n  const lastNameBlur = (()=>{\n    setEnterLastNameTouch(true);\n   \n  })\n\n  const formSubmitHandler = ((event)=>{\n    setEnterFirstNameTouch(true);\n     event.preventDefault();\n     if(!enterNameIsValid){\n       return;\n     }\n     if(!enterLastNameIsValid){\n      return;\n    }\n    console.log(enterLastName);\n     console.log(enterFirstName);\n     setEnterFirstName('');\n     setEnterLastName('');\n     setEnterFirstNameTouch(false);\n     setEnterLastNameTouch(false);\n  })\n\n  const FirstnameInputClasses = enterNameISInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n    const lastnameInputClasses = enterNameISInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={FirstnameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input value={enterFirstName} type='text' id='name' onChange={inputChangeHandler} onBlur= {firstNameBlur}/>\n          {enterNameISInvalid && <p>please enter a valid name</p>}\n        </div>\n        <div className={lastnameInputClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' onChange={lastInputChangeHandler} onBlur={lastNameBlur}  value={enterLastName}/>\n           {enterNameISInvalid && <p>please enter a valid last name</p>}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}