{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setenteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('yu hu');\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = () => {};\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setenteredNameIsValid(false);\n      return;\n    }\n\n    setenteredNameIsValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value);\n    setEnteredName('');\n  };\n\n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), nameInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"TVxyRNqy/E9Wp3sGiFtxqKXJL6E=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setenteredNameIsValid","enteredNameTouched","setEnteredNameTouched","console","log","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissonHandler","preventDefault","trim","current","nameInputISInvalid","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGL,MAAM,EAA3B;AAEA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA4CR,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA6CV,QAAQ,CAAC,KAAD,CAA3D;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGM,kBAAH,EAAsB;AACpBI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GAJQ,EAIP,CAACL,kBAAD,CAJO,CAAT;;AAMA,QAAMM,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAG,MAAI,CAEhC,CAFD;;AAGA,QAAMC,oBAAoB,GAAIJ,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACK,cAAN;AAEDT,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACC,QAAGL,WAAW,CAACe,IAAZ,OAAsB,EAAzB,EAA4B;AAC1BZ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACiB,OAAb,CAAqBL,KAAjC;AACAV,IAAAA,cAAc,CAAC,EAAD,CAAd;AAGD,GAfD;;AAiBA,QAAMgB,kBAAkB,GAAG,CAACf,kBAAD,IAAuBE,kBAAlD;AACA,QAAMc,gBAAgB,GAAG,CAACD,kBAAD,GAAsB,cAAtB,GAAuC,sBAAhE;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAEE,QAAA,GAAG,EAAEnB,YAFP;AAGE,QAAA,QAAQ,EAAES,sBAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC,MALL;AAME,QAAA,KAAK,EAAER,WANT;AAOE,QAAA,MAAM,EAAEY;AAPV;AAAA;AAAA;AAAA;AAAA,cAFF,EAYIK,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZ1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3DD;;GAAMpB,W;;KAAAA,W;AA6DN,eAAeA,WAAf","sourcesContent":["import { useRef, useState,useEffect } from \"react\";\n\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setenteredNameIsValid]=useState(false);\n  const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log('yu hu')\n    }\n  },[enteredNameIsValid])\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = ()=>{\n    \n  };\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n  \n   setEnteredNameTouched(true);\n    if(enteredName.trim()=== ''){\n      setenteredNameIsValid(false)\n      return;\n    }\n\n    setenteredNameIsValid(true);\n    console.log(enteredName);\n    console.log(nameInputRef.current.value)\n    setEnteredName('');\n\n\n  };\n \n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n      \n          ref={nameInputRef}\n          onChange={nameInputChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n         \n        />\n         {nameInputISInvalid && <p className=\"error-text\">name is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}