{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\"); // const [enteredNameIsValid, setenteredNameIsValid]=useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log('yu hu');\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value); // if(event.target.value.trim()!== ''){\n    //   setenteredNameIsValid(true)\n    // }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setenteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setenteredNameIsValid(false);\n      return;\n    }\n\n    setenteredNameIsValid(true);\n    console.log(enteredName);\n    setEnteredName('');\n  };\n\n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"u/tPrIyUg2EIZrWZ0+ZtgMo+WnM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","console","log","nameInputChangeHandler","event","target","value","nameInputBlurHandler","setenteredNameIsValid","formSubmissonHandler","preventDefault","nameInputISInvalid","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAG7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAH6B,CAI7B;;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA6CP,QAAQ,CAAC,KAAD,CAA3D;AAEA,QAAMQ,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAsB,EAAjD;AACAR,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGO,kBAAH,EAAsB;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GAJQ,EAIP,CAACH,kBAAD,CAJO,CAAT;;AAMA,QAAMI,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADwC,CAExC;AACA;AAEA;AACD,GAND;;AAOA,QAAMC,oBAAoB,GAAIH,KAAD,IAAS;AACpCN,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAGH,WAAW,CAACK,IAAZ,OAAsB,EAAzB,EAA4B;AAC1BQ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AAED;AAEF,GAPD;;AAQA,QAAMC,oBAAoB,GAAIL,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACM,cAAN;AAEDZ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACC,QAAGH,WAAW,CAACK,IAAZ,OAAsB,EAAzB,EAA4B;AAC1BQ,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AAGD,GAfD;;AAiBA,QAAMe,kBAAkB,GAAG,CAACZ,kBAAD,IAAuBF,kBAAlD;AACA,QAAMe,gBAAgB,GAAG,CAACD,kBAAD,GAAsB,cAAtB,GAAuC,sBAAhE;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEF,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAGE,QAAA,QAAQ,EAAET,sBAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC,MALL;AAME,QAAA,KAAK,EAAER,WANT;AAOE,QAAA,MAAM,EAAEY;AAPV;AAAA;AAAA;AAAA;AAAA,cAFF,EAYII,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZ1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CArED;;GAAMlB,W;;KAAAA,W;AAuEN,eAAeA,WAAf","sourcesContent":["import { useRef, useState,useEffect } from \"react\";\n\n\nconst SimpleInput = (props) => {\n \n\n  const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsValid, setenteredNameIsValid]=useState(false);\n  const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n\n  const enteredNameIsValid = enteredName.trim()!== '';\n  useEffect(()=>{\n    if(enteredNameIsValid){\n      console.log('yu hu')\n    }\n  },[enteredNameIsValid])\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    // if(event.target.value.trim()!== ''){\n    //   setenteredNameIsValid(true)\n      \n    // }\n  };\n  const nameInputBlurHandler = (event)=>{\n    setEnteredNameTouched(true);\n    if(enteredName.trim()=== ''){\n      setenteredNameIsValid(false)\n      \n    }\n\n  };\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n  \n   setEnteredNameTouched(true);\n    if(enteredName.trim()=== ''){\n      setenteredNameIsValid(false)\n      return;\n    }\n\n    setenteredNameIsValid(true);\n    console.log(enteredName);\n\n    setEnteredName('');\n\n\n  };\n \n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n      \n      \n          onChange={nameInputChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n         \n        />\n         {nameInputISInvalid && <p className=\"error-text\">name is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}