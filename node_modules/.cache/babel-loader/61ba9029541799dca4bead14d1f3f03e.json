{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enterName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    isValid: enteredNameIsValid,\n    reset: resetNameInput\n  } = useInput(value => {\n    value.trim() !== '';\n  }); // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  // const nameInputISInvalid =  !enteredNameIsValid && enteredNameTouched;\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputISInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  }; // const nameInputChangeHandler = (event) => {\n  //   setEnteredName(event.target.value);\n  // };\n  // const nameInputBlurHandler = (event) => {\n  //   setEnteredNameTouched(true);\n  // };\n\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredEmailTouched(true); // setEnteredNameTouched(true);\n\n    if (!enteredEmailIsValid) {\n      return;\n    }\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const emailInputClass = !emailInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  const nameInputClasses = !nameInputHasError ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameChangedHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enterName,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        type: \"email\",\n        id: \"email\",\n        value: enteredEmail,\n        onBlur: emailInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), emailInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"email is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"QWyb4KrNCPFhCDSp7DjdBF/ywVA=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","props","value","enterName","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","isValid","enteredNameIsValid","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputISInvalid","formIsValid","emailInputChangeHandler","event","target","emailInputBlurHandler","formSubmissonHandler","preventDefault","console","log","enteredName","emailInputClass","nameInputClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {value: enterName,\n         hasError: nameInputHasError,\n         valueChangeHandler: nameChangedHandler,\n         inputBlurHandler: nameBlurHandler,\n         isValid: enteredNameIsValid,\n         reset: resetNameInput,\n  } = useInput((value)=>{\n    value.trim() !== '';\n  });\n\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  // const nameInputISInvalid =  !enteredNameIsValid && enteredNameTouched;\n \n  const [enteredEmail, setEnteredEmail]= useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false); \n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputISInvalid =  !enteredEmailIsValid && enteredEmailTouched;\n\n  \n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = (event)=>{\n   setEnteredEmail(event.target.value);\n  }\n   \n  const emailInputBlurHandler = (event)=>{\n    setEnteredEmailTouched(true);\n  }\n\n  // const nameInputChangeHandler = (event) => {\n  //   setEnteredName(event.target.value);\n  // };\n\n  // const nameInputBlurHandler = (event) => {\n  //   setEnteredNameTouched(true);\n  // };\n\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n    setEnteredEmailTouched(true);\n    // setEnteredNameTouched(true);\n    if(!enteredEmailIsValid){\n      return;\n    }\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    resetNameInput();\n\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const emailInputClass = !emailInputISInvalid ?   \"form-control\"\n  : \"form-control invalid\";\n\n  const nameInputClasses = !nameInputHasError \n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          onChange={nameChangedHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enterName}\n          onBlur={nameBlurHandler}\n        />\n        {nameInputHasError && <p className=\"error-text\">name is not valid</p>}\n      </div>\n\n      <div className={emailInputClass}>\n        <label htmlFor=\"email\">Your E-mail</label>\n        <input\n          onChange={emailInputChangeHandler}\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n          onBlur={emailInputBlurHandler}\n        />\n        {emailInputISInvalid && <p className=\"error-text\">email is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}