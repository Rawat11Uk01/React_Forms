{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() == '';\n\nconst isEmail = value => value.includes('@');\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    resetFirstName();\n    resetLastName();\n  };\n\n  const firstNameInputClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameInputClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter valid first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"enter valid first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"xs57+YNma6jw21LN2dRzCYUSuPU=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/BasicForm.js"],"names":["useInput","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","firstNameValue","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","formIsValid","formSubmitHandler","event","preventDefault","firstNameInputClasses","lastNameInputClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\nconst isNotEmpty = (value)=> value.trim()=='';\nconst isEmail = (value)=> value.includes('@');\n\nconst BasicForm = (props) => {\n  const{\n    value: firstNameValue, \n    isValid: firstNameIsValid,\n    hasError:firstNameHasError ,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty)\n  const{\n    value: lastNameValue, \n    isValid: lastNameIsValid,\n    hasError:lastNameHasError ,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty)\n  \n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid ) {\n    formIsValid = true;\n  }\n\nconst formSubmitHandler = ((event)=>{\n   event.preventDefault();\n   if(!formIsValid){\n     return;\n   }\n \n   resetFirstName();\n   resetLastName();\n})\n\nconst firstNameInputClasses = firstNameHasError\n? 'form-control invalid'\n: 'form-control';\nconst lastNameInputClasses = lastNameHasError\n? 'form-control invalid'\n: 'form-control';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={firstNameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' value={firstNameValue} onChange={firstNameChangeHandler} onBlur={firstNameBlurHandler}/>\n          {firstNameHasError && <p>enter valid first name</p>}\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name' value={lastNameValue} onChange={lastNameChangeHandler} onBlur={lastNameBlurHandler}/>\n          {lastNameHasError && <p>enter valid first name</p>}\n        </div>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input type='text' id='name' />\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}