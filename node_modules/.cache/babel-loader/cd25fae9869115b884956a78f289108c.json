{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsvalid, setEnteredNameIsvalid] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsvalid(false);\n      ;\n      return;\n    }\n\n    setEnteredNameIsvalid(true);\n    console.log(enteredName);\n    setEnteredName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), enteredNameIsvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Form is Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"jRu8Dzxktf1GKr+ks5zJaeaKzGM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/SimpleInput.js"],"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsvalid","setEnteredNameIsvalid","nameInputChangeHandler","event","target","value","formSubmissonHandler","preventDefault","trim","console","log"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA6CP,QAAQ,CAAC,KAAD,CAA3D;;AAEA,QAAMQ,sBAAsB,GAAIC,KAAD,IAAW;AACxCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAGT,WAAW,CAACU,IAAZ,OAAsB,EAAzB,EAA4B;AAC1BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AAA6B;AAC7B;AACD;;AACDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AAEAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AAED,GAXD;;AAYA,sBACE;AAAM,IAAA,QAAQ,EAAEO,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAEE,QAAA,GAAG,EAAET,YAFP;AAGE,QAAA,QAAQ,EAAEK,sBAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC;AALL;AAAA;AAAA;AAAA;AAAA,cAFF,EASGF,kBAAkB,iBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAxCD;;GAAML,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsvalid, setEnteredNameIsvalid]= useState(false);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n    if(enteredName.trim()=== ''){\n      setEnteredNameIsvalid(false);;\n      return;\n    }\n    setEnteredNameIsvalid(true);\n    console.log(enteredName);\n    \n    setEnteredName('');\n   \n  };\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n      \n          ref={nameInputRef}\n          onChange={nameInputChangeHandler}\n          type=\"text\"\n          id=\"name\"\n        />\n        {enteredNameIsvalid&&<p>Form is Invalid</p>}\n      </div>\n\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}