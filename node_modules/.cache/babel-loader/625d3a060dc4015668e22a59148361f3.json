{"ast":null,"code":"var _jsxFileName = \"/home/alind/Downloads/React_forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\"); // const [enteredNameIsValid, setenteredNameIsValid]=useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false); // const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = enteredNameIsValid; // useEffect(()=>{\n  // if(enteredNameIsValid ){\n  //   formIsValid= true;\n  // }\n  // },[enteredNameIsValid]);\n  // useEffect(()=>{\n  //   if(enteredNameIsValid){\n  //     console.log('yu hu')\n  //   }\n  // },[enteredNameIsValid])\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value); // if(event.target.value.trim()!== ''){\n    //   setenteredNameIsValid(true)\n    // }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true); // if(enteredName.trim()=== ''){\n    //   setenteredNameIsValid(false)\n    // }\n  };\n\n  const formSubmissonHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      // setenteredNameIsValid(false)\n      return;\n    } // setenteredNameIsValid(true);\n\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissonHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), nameInputISInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"LgiCUeBZKlto+n6NHgnrvDwlEEY=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/alind/Downloads/React_forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputISInvalid","formIsValid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissonHandler","preventDefault","console","log","nameInputClasses"],"mappings":";;;AAAA,SAAUA,QAAV,QAA0B,OAA1B;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAF6B,CAG7B;;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA6CN,QAAQ,CAAC,KAAD,CAA3D,CAJ6B,CAK7B;;AACA,QAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAsB,EAAjD;AACA,QAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,kBAAlD;AACA,MAAIK,WAAW,GAAGH,kBAAlB,CAR6B,CAY7B;AACE;AACA;AACA;AACF;AAGA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADwC,CAGxC;AACA;AAEA;AACD,GAPD;;AAQA,QAAMC,oBAAoB,GAAIH,KAAD,IAAS;AACpCN,IAAAA,qBAAqB,CAAC,IAAD,CAArB,CADoC,CAEpC;AACA;AAEA;AAED,GAPD;;AAQA,QAAMU,oBAAoB,GAAIJ,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACK,cAAN;AAEDX,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACC,QAAG,CAACC,kBAAJ,EAAuB;AACrB;AACA;AACD,KAPqC,CAStC;;;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAEAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AAGD,GAhBD;;AAmBA,QAAMc,gBAAgB,GAAG,CAACX,kBAAD,GAAsB,cAAtB,GAAuC,sBAAhE;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEO,oBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAGE,QAAA,QAAQ,EAAET,sBAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,EAAE,EAAC,MALL;AAME,QAAA,KAAK,EAAER,WANT;AAOE,QAAA,MAAM,EAAEY;AAPV;AAAA;AAAA;AAAA;AAAA,cAFF,EAYIN,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZ1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlFD;;GAAMT,W;;KAAAA,W;AAoFN,eAAeA,WAAf","sourcesContent":["import {  useState } from \"react\";\n\n\nconst SimpleInput = (props) => {\n \n  const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsValid, setenteredNameIsValid]=useState(false);\n  const [enteredNameTouched, setEnteredNameTouched]= useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim()!== '';\n  const nameInputISInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = enteredNameIsValid;\n \n\n\n  // useEffect(()=>{\n    // if(enteredNameIsValid ){\n    //   formIsValid= true;\n    // }\n  // },[enteredNameIsValid]);\n  \n\n  // useEffect(()=>{\n  //   if(enteredNameIsValid){\n  //     console.log('yu hu')\n  //   }\n  // },[enteredNameIsValid])\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n   \n    // if(event.target.value.trim()!== ''){\n    //   setenteredNameIsValid(true)\n      \n    // }\n  };\n  const nameInputBlurHandler = (event)=>{\n    setEnteredNameTouched(true);\n    // if(enteredName.trim()=== ''){\n    //   setenteredNameIsValid(false)\n      \n    // }\n\n  };\n  const formSubmissonHandler = (event) => {\n    event.preventDefault();\n  \n   setEnteredNameTouched(true);\n    if(!enteredNameIsValid){\n      // setenteredNameIsValid(false)\n      return;\n    }\n\n    // setenteredNameIsValid(true);\n    console.log(enteredName);\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n\n\n  };\n \n\n  const nameInputClasses = !nameInputISInvalid ? \"form-control\" : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissonHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n      \n      \n          onChange={nameInputChangeHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n         \n        />\n         {nameInputISInvalid && <p className=\"error-text\">name is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}